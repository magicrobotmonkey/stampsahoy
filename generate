#!/usr/bin/env python
import argparse
import subprocess
from octorest import OctoRest

def model(output, args):
    message = ' '.join(args.message)
    cmd = [
        "openscad",
        "-o", output,
        "-D", f'message="{message}"',
        "-D", f'font="{args.font}"',
        "-D", f'font_size={args.size}',
        "-D", f'depth={args.depth}',
        "stamp.scad",
    ]
    print(' '.join(cmd))
    subprocess.run(cmd)


def slice():
    cmd = [
        "Slic3r",
        "--skirts=0",
        "--temperature=215",
        "--bed-temperature=60",
        "--first-layer-bed-temperature=60",
        "--layer-height=0.2",
        "--nozzle-diameter=0.4",
        "--filament-diameter=1.75",
        "--cooling",
        "--top-solid-infill-speed=80",
        "--solid-infill-speed=80",
        "--gap-fill-speed=80",
        "--small-perimeter-speed=40",
        "--gcode-flavor=repetier",
        "stamp.stl",
    ]
    print(' '.join(cmd))
    subprocess.run(cmd)

def octoprint(url, apikey):
    client = OctoRest(url=url, apikey=apikey)
    state = client.state()
    if state != 'Operational':
        print("Printer ain't operational, bailing out")
        return
    print("printing stamp")
    client.upload('stamp.gcode')
    client.select('stamp.gcode')
    client.start()

parser = argparse.ArgumentParser(description='Generate a text stamp.')
parser.add_argument('-d', '--depth', default=3, help='Stamp Depth')
parser.add_argument('-s', '--size', default=10, help='Font Size')
parser.add_argument('-f', '--font', default="JMH Typewriter dry", help='Font/Style')
parser.add_argument('-u', '--octoprint_url', help='Url of Octoprint Server')
parser.add_argument('-k', '--octoprint_key', help='Octoprint api key')
parser.add_argument('message', nargs='+')
args = parser.parse_args()

model('stamp.stl', args)
slice()
if args.octoprint_url is not None and \
    args.octoprint_key is not None:
    octoprint(args.octoprint_url, args.octoprint_key)
